var searchIndex = JSON.parse('{\
"pulldown_cmark_frontmatter":{"doc":"pulldown-cmark-frontmatter","t":[3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11],"n":["CodeBlock","Frontmatter","FrontmatterExtractor","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","code_block","extract","from","from","from","from_markdown","frontmatter","into","into","into","into_iter","language","new","next","source","title","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["pulldown_cmark_frontmatter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A code block from a Markdown document’s <code>Frontmatter</code>.","Metadata stored within a Markdown document.","Extracts <code>Frontmatter</code> from any …","","","","","","","The frontmatter code block, if detected.","Scans the start of the document looking for <code>Frontmatter</code>. If","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns an instance that parses <code>markdown</code> with the default …","The detected frontmatter, if any.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The language of the code block, which is the identifier …","Returns a new instance that extracts frontmatter from the …","","The contents of the code block.","The top-level heading’s plain-text contents, if the …","","","","","","","","",""],"i":[0,0,0,1,2,8,1,2,8,2,1,1,2,8,1,1,1,2,8,1,8,1,1,8,2,1,2,8,1,2,8,1,2,8],"f":[0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[1,[[3,[2]]]],[[]],[[]],[[]],[4,[[1,[5]]]],0,[[]],[[]],[[]],[[]],0,[[],1],[1,3],0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7]],"p":[[3,"FrontmatterExtractor"],[3,"Frontmatter"],[4,"Option"],[15,"str"],[3,"Parser"],[4,"Result"],[3,"TypeId"],[3,"CodeBlock"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
